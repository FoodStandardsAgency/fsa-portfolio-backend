using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace FSAPortfolio.Entities.Organisation
{
    public enum PortfolioFieldType
    {
        None = 0,
        Auto = 1,
        FreeText = 2,
        OptionList = 3,
        PredefinedList = 4,
        PredefinedField = 5,
        Date = 6,
        Percentage = 7,
        RAGChoice = 8,
        Budget = 9,
        FreeTextArea = 10,
        SelectPicker = 11
    }

    [Flags]
    public enum PortfolioFieldFlags
    {
        Create = 1,
        Read = 1 << 1,
        Update = 1 << 2,
        Delete = 1 << 3,
        Default = Create | Read | Update | Delete,
        UpdateOnly = Read | Update
    }

    public class PortfolioFieldTypeDescriptions : Dictionary<PortfolioFieldType, string>
    {
        public static PortfolioFieldTypeDescriptions Map = new PortfolioFieldTypeDescriptions();
        private PortfolioFieldTypeDescriptions()
        {
            this[PortfolioFieldType.None] = "None";
            this[PortfolioFieldType.Auto] = "Auto-generated by the system";
            this[PortfolioFieldType.FreeText] = "Free text input";
            this[PortfolioFieldType.FreeTextArea] = "Multiline text input";
            this[PortfolioFieldType.OptionList] = "List of options for the drop-down";
            this[PortfolioFieldType.PredefinedList] = "Pre-defined list";
            this[PortfolioFieldType.PredefinedField] = "Pre-defined field";
            this[PortfolioFieldType.Date] = "Date";
            this[PortfolioFieldType.Percentage] = "Percentage";
            this[PortfolioFieldType.RAGChoice] = "RAG choice";
            this[PortfolioFieldType.Budget] = "Budget amount";
            this[PortfolioFieldType.SelectPicker] = "Select multiple options from list";
        }
    }

    public class PortfolioLabelConfig
    {
        public int Id { get; set; }

        public virtual PortfolioConfiguration Configuration { get; set; }
        public int Configuration_Id { get; set; }

        public PortfolioFieldFlags Flags { get; set; }

        [StringLength(50)]
        public string FieldName { get; set; }

        [StringLength(50)]
        public string FieldTitle { get; set; }
        public int FieldOrder { get; set; }

        public bool Included { get; set; }
        public bool AdminOnly { get; set; }
        public bool IncludedLock { get; set; }
        public bool AdminOnlyLock { get; set; }


        [StringLength(50)]
        public string Label { get; set; }

        public PortfolioFieldType FieldType { get; set; }
        public bool FieldTypeLocked { get; set; }

        public virtual PortfolioLabelGroup Group { get; set; }

        /// <summary>
        /// This label can only be configured if the master label is included.
        /// </summary>
        public virtual PortfolioLabelConfig MasterLabel { get; set; }
        public int? MasterLabel_Id { get; set; }
    }

    public class PortfolioLabelGroup
    {
        public int Id { get; set; }

        public virtual PortfolioConfiguration Configuration { get; set; }
        public int Configuration_Id { get; set; }


        [StringLength(50)]
        public string Name { get; set; }

        public int Order { get; set; }

        public virtual ICollection<PortfolioLabelConfig> Labels { get; set; }
    }
}